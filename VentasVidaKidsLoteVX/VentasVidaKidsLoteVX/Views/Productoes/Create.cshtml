@model VentasVidaKidsLoteVX.Models.Producto

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Producto</h4>
<hr />
<div class="row">
    <div class="centrar_form">
        <form asp-action="Create" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="container_form">
                <div class="caja">
                    <div class="form-group">
                        <label asp-for="NombreEstado" class="control-label">Estado</label>
                        <select asp-for="NombreEstado" class="form-control" asp-items="ViewBag.NombreEstado"></select>
                        *Recuerda, el estado del cliente sera Activo por Defecto*
                    </div>

                    <div class="form-group">
                        <label asp-for="NombreCategoria" class="control-label">Categoria</label>
                        <select asp-for="NombreCategoria" class="form-control" asp-items="ViewBag.NombreCategoria"></select>
                    </div>

                    <div class="form-group">
                        <label for="nombrep" asp-for="NombreProducto" class="control-label"></label>
                        <input id="nombrep" asp-for="NombreProducto" class="form-control" required />
                        <span asp-validation-for="NombreProducto" class="text-danger"></span>
                        <div class="valid-feedback">
                            Llenado corectamente

                        </div>
                        <div class="invalid-feedback">
                            El Nombre Producto es un campo obligatorio

                        </div>

                    </div>


                    <div class="form-group">
                        <label for="desc" asp-for="DescripcionProducto" class="control-label"></label>
                        <input id="desc" asp-for="DescripcionProducto" class="form-control" required />
                        <span asp-validation-for="DescripcionProducto" class="text-danger"></span>
                        <div class="valid-feedback">
                            Llenado corectamente

                        </div>
                        <div class="invalid-feedback">
                            La descripcion es un campo obligatorio

                        </div>
                    </div>

                    <div class="form-group">
                        <label for="precio" asp-for="PrecioProducto" class="control-label"></label>
                        <input id="precio" asp-for="PrecioProducto" class="form-control" required />
                        <span asp-validation-for="PrecioProducto" class="text-danger"></span>
                        <div class="valid-feedback">
                            Llenado corectamente

                        </div>
                        <div class="invalid-feedback">
                            El Precio es un campo obligatorio

                        </div>
                    </div>


                    <div class="form-group">
                        <label for="stock" asp-for="Stock" class="control-label"></label>
                        <input id="stock" asp-for="Stock" class="form-control" required />
                        <span asp-validation-for="Stock" class="text-danger"></span>
                        <div class="valid-feedback">
                            Llenado corectamente

                        </div>
                        <div class="invalid-feedback">
                            El Stock es un campo obligatorio

                        </div>

                    </div>
                </div>

               
                <div class="form-group">

                    <input type="submit" value="Create" class="btn btn-primary" />
                    <a class="btn btn-secondary" asp-action="Index">Regresar</a>
                </div>

        </form>
    </div>
</div>

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
